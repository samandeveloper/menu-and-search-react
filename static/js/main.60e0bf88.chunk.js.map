{"version":3,"sources":["logo.svg","components/Cocktail.js","components/Loading.js","context.js","components/CocktailList.js","components/SearchForm.js","pages/Home.js","pages/About.js","pages/SingleCocktail.js","pages/Error.js","components/Navbar.js","App.js","index.js"],"names":["module","exports","Cocktail","image","name","id","info","glass","className","src","alt","to","Loading","AppContext","React","createContext","AppProvider","children","useState","loading","setLoading","searchTerm","setSearchTerm","cocktails","setCocktails","fetchDrinks","useCallback","a","fetch","response","json","data","drinks","newCocktails","map","item","idDrink","strDrink","strDrinkThumb","strAlcoholic","strGlass","useEffect","Provider","value","useGlobalContext","useContext","CocktailList","length","key","SearchForm","searchValue","useRef","current","focus","onSubmit","e","preventDefault","htmlFor","type","ref","onChange","target","Home","About","url","SingleCocktail","useParams","cocktail","setCocktail","category","strCategory","instructions","strInstructions","strIngredient1","strIngredient2","strIngredient3","strIngredient4","strIngredient5","ingredients","console","log","getCocktail","index","Error","Navbar","logo","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.60e0bf88.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.f3ad7664.svg\";","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Cocktail = ({image,name,id,info,glass}) => {\r\n  return (\r\n    <article className='cocktail'>\r\n      <div className='img-container'>\r\n        <img src={image} alt={name}/>\r\n      </div>\r\n      <div className='cocktail-footer'>\r\n        <h3>{name}</h3>\r\n        <h4>{glass}</h4>\r\n        <p>{info}</p>\r\n        {/* below, every time click on the details button on each cocktails,it directs to the SingleCoclktail page using the id */}\r\n        <Link to={`/cocktail/${id}`} className=\"btn btn-primary btn-details\">  \r\n          details\r\n        </Link>\r\n      </div>\r\n    </article>\r\n  )\r\n}\r\n\r\nexport default Cocktail\r\n","//loading happens in three place \r\n//1.when we click on each cocktails \r\n//2. on the homepage when cocktailList is loading \r\n//3.as we are typing in the search field\r\nimport React from 'react'\r\n\r\nconst Loading = () => {\r\n return (\r\n  <div className=\"loader\">\r\n  </div>\r\n )\r\n}\r\n\r\nexport default Loading\r\n","import React, { useState, useContext, useEffect } from 'react'\r\nimport { useCallback } from 'react'\r\n\r\n// below is the cocktail db API and it doesn't have the API key--it's a search API\r\n//go to https://www.thecocktaildb.com/api.php  link--at the end of the url below, is margarita but we are not going to add it since users should add anything that they want in the search field\r\nconst url = 'https://www.thecocktaildb.com/api/json/v1/1/search.php?s='\r\nconst AppContext = React.createContext()   //define/create the useContext\r\n\r\nconst AppProvider = ({ children }) => {\r\n  //states\r\n  const[loading,setLoading] = useState(true)\r\n  const[searchTerm,setSearchTerm] = useState('a')  //by default we should receive some of the cocktails list that has 'a' (we can use anything instead of a )-set to 'a' as an example to show some cocktails when the app loads\r\n  const[cocktails,setCocktails] = useState([])  //by default an emty value--no cocktail items\r\n\r\n  //fetch function for API\r\n  const fetchDrinks = useCallback(async() =>{   //useCallback to say only use create this function again if search changes if not don't create it from scratch\r\n    setLoading(true) \r\n    try{\r\n      //we grab the url and then searchTerm which is by default shows cocktails contains a \r\n      const response = await fetch(`${url}${searchTerm}`)\r\n      const data = await response.json()\r\n      //so we should write the if statement so if we have the drink array or it's null (when type gibrish)\r\n      const {drinks} = data  //let data ={drinks: }  //grab me the drinks from data\r\n      if(drinks){  //if drinks is not null iterate over them\r\n        const newCocktails = drinks.map((item) =>{\r\n          const {idDrink, strDrink, strDrinkThumb,strAlcoholic, strGlass} = item   \r\n            //choose a proper name for object variables that we want to return\r\n            return{\r\n              id:idDrink,\r\n              name:strDrink,\r\n              image:strDrinkThumb,\r\n              info:strAlcoholic,\r\n              glass:strGlass\r\n          }\r\n        })\r\n        setCocktails(newCocktails)   //we have to set the cocktails\r\n      }else{  //if drink is null there shouldn't be any cocktail list, it should be an emty array\r\n        setCocktails([])   //show an emty list of cocktails\r\n      }\r\n      setLoading(false)\r\n    }catch (error){\r\n      setLoading(false)\r\n    }\r\n  })\r\n  \r\n  //call the fetchDrinks function every time searchTerm state call\r\n  useEffect(()=>{\r\n    fetchDrinks()\r\n  },[searchTerm])\r\n\r\n  return <AppContext.Provider value={{\r\n    loading,\r\n    cocktails,\r\n    setSearchTerm}} >{children}</AppContext.Provider>\r\n}\r\n//grab the states in the useGlobalContext \r\nexport const useGlobalContext = () => {\r\n  return useContext(AppContext)\r\n}\r\n\r\nexport { AppContext, AppProvider }  \r\n","import React from 'react'\r\nimport Cocktail from './Cocktail'\r\nimport Loading from './Loading'\r\nimport { useGlobalContext } from '../context'\r\n\r\nconst CocktailList = () => {\r\n  //bring the cocktails and loading states from the context file \r\n  const {cocktails, loading} = useGlobalContext()   \r\n  \r\n  //if loading is true\r\n  if(loading){  \r\n    return <Loading />\r\n  }\r\n  //if we search something and it wasn't on the list then a message will generate--if the loading is false this one happens\r\n  if(cocktails.length < 1){  //no cocktail items exists\r\n    return(\r\n    <h2 className='section-title'>no cocktails matched your search criteria</h2>\r\n    )\r\n  }\r\n  \r\n  return (\r\n    <section className='section'>\r\n      <h2 className='section-title'>\r\n        cocktails\r\n      </h2>\r\n      <div className='cocktails-center'>\r\n        {cocktails.map((item)=>{\r\n          return <Cocktail key={item.id} {...item}/>\r\n        })}\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default CocktailList\r\n","import React from 'react'\r\nimport { useGlobalContext } from '../context'\r\n\r\nconst SearchForm = () => {\r\n  // we import the useGlobalContext above, now we have to destructure it from the context file to bring the states that we want\r\n  const {setSearchTerm} = useGlobalContext()   //we don't need the searchTerm state, we just need the setSearchTerm\r\n  //uncontrolled input -- use useRef --let DOM handle the component\r\n  const searchValue = React.useRef('')   //empty string\r\n\r\n  //fetching data--we use current.focus to appear the input box in the search field with the enter or click\r\n  React.useEffect(()=>{\r\n    searchValue.current.focus()\r\n  },[])  //we call it when the components render\r\n\r\n  //to prevent refreshing the page if the user pushes the enter button \r\n  const handleSubmit = (e)=>{\r\n    e.preventDefault()\r\n  }\r\n\r\n  return (\r\n    <section className='section search'>\r\n      <form className='search-form' onSubmit={handleSubmit}>\r\n        <div className='form-control'>\r\n          <lable htmlFor=\"name\">Search your favorite cocktail</lable>\r\n          <input type='text' id='name' ref={searchValue} onChange={(e)=>setSearchTerm(e.target.value)}/>\r\n        </div>\r\n      </form>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default SearchForm\r\n","//in the homepage we have searchForm and cocktailList components\r\nimport React from 'react'\r\nimport CocktailList from '../components/CocktailList'\r\nimport SearchForm from '../components/SearchForm'\r\n\r\nconst Home = () => {\r\n  return (\r\n    <main>\r\n      <SearchForm />\r\n      <CocktailList />\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\n\r\nconst About = () => {\r\n  return (\r\n    <section className='section about-section'>\r\n      <h1 className='section-title'>about us</h1>\r\n      <p>\r\n      Lorem ipsum dolor sit amet consectetur adipisicing elit. Molestiae repudiandae architecto qui adipisci in officiis, aperiam sequi atque perferendis eos, autem maiores nisi saepe quisquam hic odio consectetur nobis veritatis quasi explicabo obcaecati doloremque? Placeat ratione hic aspernatur error blanditiis?\r\n      </p>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default About\r\n","import React from 'react'\r\nimport Loading from '../components/Loading'\r\n//The useParams hook returns an object of key/value pairs of the dynamic params from the current URL that were matched by the <Route path> \r\nimport { useParams, Link } from 'react-router-dom'\r\nconst url = 'https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i='\r\n\r\nconst SingleCocktail = () => {\r\n  const{id} = useParams()   //receive the id of each cocktail from API using the useParams\r\n\r\n  //states\r\n  const [loading, setLoading] = React.useState(false)\r\n  const [cocktail,setCocktail] = React.useState(null)\r\n\r\n  //fetch data\r\n  React.useEffect(()=>{\r\n    setLoading(true)\r\n    //we use async for the fetch (old way) -- instead of const fetchDrinks = async() =>{\r\n    async function getCocktail(){\r\n      try{\r\n        const response = await fetch (`${url}${id}`)   \r\n        const data = await response.json()\r\n        if(data.drinks){  //if data.drinks exists then show some items like ingredients\r\n          const{\r\n            strDrink:name, \r\n            strDrinkThumb:image,\r\n            strAlcoholic:info,\r\n            strCategory:category,\r\n            strGlass:glass,\r\n            strInstructions:instructions,\r\n            strIngredient1,\r\n            strIngredient2,\r\n            strIngredient3,\r\n            strIngredient4,\r\n            strIngredient5} = data.drinks[0]\r\n\r\n          //first 5 ingredients should be in the an array to show them together in UI  \r\n          const ingredients = [\r\n            strIngredient1,\r\n            strIngredient2,\r\n            strIngredient3,\r\n            strIngredient4,\r\n            strIngredient5\r\n          ]\r\n          //ES6\r\n          const newCocktail = {\r\n            name,\r\n            image,\r\n            info,\r\n            category,\r\n            glass,\r\n            instructions,\r\n            ingredients\r\n          }\r\n          setCocktail(newCocktail)\r\n        }else{   //if data.drinks doesn't exists\r\n          setCocktail([])\r\n        }\r\n      }catch(error){\r\n        console.log(error)\r\n      }\r\n      setLoading(false)\r\n    }\r\n    getCocktail()   //call/invoke the function\r\n  },[id])  //every time id changes\r\n\r\n  if(loading){\r\n    return <Loading />\r\n  }\r\n  if(!cocktail){  //if cocktail is null\r\n    return <h2 className='section-title'>no cocktail to display</h2>\r\n  }else{    //if cocktail is not null\r\n    const{name,image,category,info,instructions,ingredients,glass} = cocktail\r\n    return (\r\n      <section className='section cocktail-section'>\r\n        <Link to='/' className='btn btn-primary'>\r\n          back home\r\n        </Link>\r\n        <h2 className='section-title'>{name}</h2>\r\n        <div className='drink'>\r\n          <img src={image} alt={name}/>\r\n          <div className='drink-info'>\r\n            <p>\r\n              <span className='drink-data'>name :</span>{name}\r\n            </p>\r\n            <p>\r\n              <span className='drink-data'>category :</span>{category}\r\n            </p>\r\n            <p>\r\n              <span className='drink-data'>info :</span>{info}\r\n            </p>\r\n            <p>\r\n              <span className='drink-data'>glass :</span>{glass}\r\n            </p>\r\n            <p>\r\n              <span className='drink-data'>instructions :</span>{instructions}\r\n            </p>\r\n            {/* some of the items doesn't have all the 5 ingredients so we have to check them */}\r\n            <p>\r\n              <span className='drink-data'>ingredients :</span>\r\n              {ingredients.map((item,index)=>{\r\n                return item ? <span key={index}>{item}</span> : null\r\n              })}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n}  \r\nexport default SingleCocktail\r\n","//error page apperas when users insert the wrong url\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst Error = () => {\r\n  return (\r\n    <section className='error-page section'>\r\n      <div className='error-container'>\r\n        <h1>oops! it's a deed end</h1>\r\n        <Link to=\"/\" className='\"btn btn-primary'>back home</Link>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Error\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport logo from '../logo.svg'\r\n\r\n//navbar is common between all the pages\r\nconst Navbar = () => {\r\n  return (\r\n    <nav className='navbar'>\r\n      <div className='nav-center'>\r\n      {/* in navbar if we click on the logo we want to go back on the homepage that's why we use the Link tag */}\r\n      {/* The primary way to allow users to navigate around your application. <Link> will render a fully accessible anchor tag with the proper href. */}\r\n        <Link to=\"/\">\r\n          <img src={logo} alt=\"cocktail db logo\" className='logo'></img>\r\n        </Link>\r\n        {/* we are not seperating ul and li as components since there are just two li's */}\r\n        <ul className='nav-links'>\r\n          <li>\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/about\">About</Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Route, Routes, Switch } from 'react-router-dom'    //npm install react-router-dom\r\n// import pages\r\nimport Home from './pages/Home'\r\nimport About from './pages/About'\r\nimport SingleCocktail from './pages/SingleCocktail'\r\nimport Error from './pages/Error'\r\n// import Navbar component\r\nimport Navbar from './components/Navbar'\r\n\r\n\r\nfunction App() {\r\n  //we can use the router in the index.js file too\r\n  return (\r\n    <Router>\r\n      {/* because navbar is always on the top in all the page */}\r\n      <Navbar/>\r\n        <Switch>\r\n          <Route exact path=\"/\"><Home /></Route>\r\n          <Route path=\"/about\"><About /></Route>\r\n          <Route exact path=\"/cocktail/:id\"><SingleCocktail /></Route>\r\n          {/* error page (when the url address is not right) */}\r\n          <Route exact path=\"*\"><Error /></Route>   \r\n        </Switch>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'   //npm install react-dom\r\nimport './index.css'\r\nimport App from './App'\r\nimport { AppProvider } from './context'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AppProvider>\r\n    <App />\r\n    </AppProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}